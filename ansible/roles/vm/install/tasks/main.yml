---
- name: create disks for vm
  with_dict: "{{ hostvars[hostname].install_cooked.disks.virtio | default({}) | combine(hostvars[hostname].install_cooked.disks.scsi | default({})) }}"
  loop_control:
    label: "{{ item.value.vg }} / {{ item.value.lv }}  ({{ item.value.size }})"
  lvol:
    vg: "{{ item.value.vg }}"
    lv: "{{ item.value.lv }}"
    size: "{{ item.value.size }}"


- block:
    - name: create a temporary workdir
      tempfile:
        state: directory
      register: tmpdir

    - import_role:
        name: preseed
      vars:
        ssh_users_root: "{{ hostvars[hostname].ssh_users_root }}"
        preseed_tmpdir: "{{ tmpdir.path }}"
        preseed_force_net_ifnames_policy: path
        install_interface: enp1s1

    - name: Make preseed workdir readable by qemu
      acl:
        path: "{{ tmpdir.path }}"
        state: present
        entity: libvirt-qemu
        etype: user
        permissions: rx

    - import_role:
        name: vm/define
      vars:
        vm_define_installer: yes
        preseed_tmpdir: "{{ tmpdir.path }}"

    - debug:
        msg: "you can check on the status of the installer running this command 'virsh console {{ hostname }}' on host {{ inventory_hostname }}."

    - name: wait for installer to finish or crash
      wait_for_virt:
        name: "{{ hostname }}"
        states: shutdown,crashed
        timeout: 900
      register: installer_result
      failed_when: installer_result.failed or installer_result.state == "crashed"

  always:
    - name: cleanup temporary workdir
      file:
        path: "{{ tmpdir.path }}"
        state: absent

- import_role:
    name: vm/define
  vars:
    vm_define_installer: no
